pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'login-jose'
        DOCKER_TAG = 'latest'
        DOCKER_REGISTRY = ''  // Si no usas un registry externo, déjalo vacío
        PYTHON_VERSION = '3.12-slim'
    }
    stages {

        stage('Preparar entorno') {
            steps {
                sh '''
                sudo apt update && apt install -y python3-venv
                '''
            }
        }

        stage('Instalar dependencias') {
            steps {
                sh '''
                python3 -m venv venv
                ./venv/bin/pip install --upgrade pip
                ./venv/bin/pip install -r requirements.txt
                '''
            }
        }
        stage('Ejecutar pruebas') {
            steps {
                script {
                    sh '''
                    ./venv/bin/pytest --junitxml=reports/test-results.xml
                    '''
                }
            }
            post {
                always {
                    junit 'reports/test-results.xml'
                }
            }
        }
        stage('Construir imagen Docker') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                }
            }
        }
        stage('Desplegar Contenedor') {
            steps {
                script {
                    sh '''
                    docker stop ${DOCKER_IMAGE} || true
                    docker rm ${DOCKER_IMAGE} || true
                    docker run -d --name ${DOCKER_IMAGE} -p 8000:8000 ${DOCKER_IMAGE}:${DOCKER_TAG}
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline ejecutado con éxito."
        }
        failure {
            echo "Pipeline fallido. Revisa los logs."
        }
    }
}
